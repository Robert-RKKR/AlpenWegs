# Generated by Django 5.2.5 on 2025-08-31 19:20

import alpenwegs.ashared.validators.base_validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CardModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A unique identifier for the object, automatically generated as a UUIDv4 value.', primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Stores the date and time when the object was firstly created. This timestamp field is automatically set when the object is created and cannot be modified after creation.', verbose_name='Created Timestamp')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Records the date and time when the object was last updated. This timestamp field is automatically updated whenever the object is modified.', verbose_name='Updated Timestamp')),
                ('name', models.CharField(help_text='A unique name for the object. Must be between 3 and 128 characters long and can include letters, digits, spaces, or special characters such as -, _, and spaces. This field does not serve as a unique identifier within the application but helps users differentiate it from other objects.', max_length=128, unique=True, validators=[alpenwegs.ashared.validators.base_validators.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text="A unique, URL-friendly version of the name, automatically generated from the object's name. This field is used for SEO and as an identifier in URLs.", max_length=128, verbose_name='Slug')),
                ('snippet', models.CharField(blank=True, help_text='A short description of the object, between 8 and 256 characters. It may include letters, numbers, spaces, and the special characters -, _, and .', max_length=256, null=True, validators=[alpenwegs.ashared.validators.base_validators.DescriptionValueValidator()], verbose_name='Snippet')),
                ('is_public', models.BooleanField(default=True, help_text='Indicates whether the object is publicly accessible (True) or private (False). If set to True, the object will be visible to all users and guests.', verbose_name='Is Public')),
                ('description', models.TextField(help_text='Description of the card that will be displayed on the card.', verbose_name='Card Description')),
                ('elevation', models.FloatField(help_text='Elevation information related to the card.', verbose_name='Elevation')),
                ('type', models.CharField(choices=[(1, 'Mountain peak'), (2, 'Mountain range'), (3, 'Mountain hut'), (4, 'Mountain route'), (5, 'Mountain bridge'), (6, 'Mountain pass'), (7, 'Mountain trail'), (8, 'Mountain lake'), (9, 'Mountain cave'), (10, 'Mountain ruins'), (99, 'Special card')], default=1, help_text='Card type.', max_length=32, verbose_name='Card Type')),
                ('category', models.IntegerField(choices=[(101, 'Running'), (102, 'Hiking'), (104, 'Climbing'), (105, 'Via Ferrata'), (107, 'Trail Running'), (201, 'Winter Running'), (202, 'Winter Hiking'), (205, 'Snowshoeing'), (206, 'Ski Touring'), (207, 'Cross-Country Skiing'), (301, 'Biking'), (302, 'Mountain Biking'), (303, 'Downhill Biking')], default=102, help_text='Card category.', verbose_name='Category')),
                ('category_specific_difficulty', models.CharField(blank=True, help_text='Category-specific difficulty (optional).', max_length=32, null=True, verbose_name='Category-Specific Difficulty')),
            ],
            options={
                'verbose_name': 'Card',
                'verbose_name_plural': 'Cards',
            },
        ),
        migrations.CreateModel(
            name='PoiModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A unique identifier for the object, automatically generated as a UUIDv4 value.', primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Stores the date and time when the object was firstly created. This timestamp field is automatically set when the object is created and cannot be modified after creation.', verbose_name='Created Timestamp')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Records the date and time when the object was last updated. This timestamp field is automatically updated whenever the object is modified.', verbose_name='Updated Timestamp')),
                ('name', models.CharField(help_text='A unique name for the object. Must be between 3 and 128 characters long and can include letters, digits, spaces, or special characters such as -, _, and spaces. This field does not serve as a unique identifier within the application but helps users differentiate it from other objects.', max_length=128, unique=True, validators=[alpenwegs.ashared.validators.base_validators.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text="A unique, URL-friendly version of the name, automatically generated from the object's name. This field is used for SEO and as an identifier in URLs.", max_length=128, verbose_name='Slug')),
                ('snippet', models.CharField(blank=True, help_text='A short description of the object, between 8 and 256 characters. It may include letters, numbers, spaces, and the special characters -, _, and .', max_length=256, null=True, validators=[alpenwegs.ashared.validators.base_validators.DescriptionValueValidator()], verbose_name='Snippet')),
                ('is_public', models.BooleanField(default=True, help_text='Indicates whether the object is publicly accessible (True) or private (False). If set to True, the object will be visible to all users and guests.', verbose_name='Is Public')),
                ('details_description', models.TextField(blank=True, help_text='Details Description of the PoI.', null=True, verbose_name='Details Description')),
                ('transport_description', models.BigIntegerField(blank=True, help_text='Information about transport to reach this PoI.', null=True, verbose_name='Transport Description')),
                ('category', models.CharField(help_text='Xxx.', max_length=32, verbose_name='PoI Category')),
                ('latitude', models.FloatField(blank=True, help_text='Geographic location of the PoI (Latitude).', null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, help_text='Geographic location of the PoI (Longitude).', null=True, verbose_name='Longitude')),
                ('elevation', models.IntegerField(blank=True, help_text='Elevation of the PoI in meters.', null=True, verbose_name='Elevation')),
            ],
            options={
                'verbose_name': 'Point of Interest',
                'verbose_name_plural': 'Points of Interest',
            },
        ),
        migrations.CreateModel(
            name='RegionModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A unique identifier for the object, automatically generated as a UUIDv4 value.', primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Stores the date and time when the object was firstly created. This timestamp field is automatically set when the object is created and cannot be modified after creation.', verbose_name='Created Timestamp')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Records the date and time when the object was last updated. This timestamp field is automatically updated whenever the object is modified.', verbose_name='Updated Timestamp')),
                ('name', models.CharField(help_text='A unique name for the object. Must be between 3 and 128 characters long and can include letters, digits, spaces, or special characters such as -, _, and spaces. This field does not serve as a unique identifier within the application but helps users differentiate it from other objects.', max_length=128, unique=True, validators=[alpenwegs.ashared.validators.base_validators.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text="A unique, URL-friendly version of the name, automatically generated from the object's name. This field is used for SEO and as an identifier in URLs.", max_length=128, verbose_name='Slug')),
                ('snippet', models.CharField(blank=True, help_text='A short description of the object, between 8 and 256 characters. It may include letters, numbers, spaces, and the special characters -, _, and .', max_length=256, null=True, validators=[alpenwegs.ashared.validators.base_validators.DescriptionValueValidator()], verbose_name='Snippet')),
                ('is_public', models.BooleanField(default=True, help_text='Indicates whether the object is publicly accessible (True) or private (False). If set to True, the object will be visible to all users and guests.', verbose_name='Is Public')),
                ('country', models.IntegerField(choices=[(41, 'Switzerland'), (49, 'Germany'), (43, 'Austria'), (33, 'France'), (39, 'Italy')], default=41, help_text='Country where the region is located (fixed numeric list).', verbose_name='Country')),
                ('description', models.TextField(help_text='A description of the region.', verbose_name='Region Description')),
                ('latitude', models.FloatField(blank=True, help_text='Geographic location of the Region (Latitude).', null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, help_text='Geographic location of the Region (Longitude).', null=True, verbose_name='Longitude')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
            },
        ),
    ]
