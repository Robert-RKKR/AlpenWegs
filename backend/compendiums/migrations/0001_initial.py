# Generated by Django 5.2.5 on 2025-09-03 21:18

import alpenwegs.ashared.validators.base_validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CardModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A unique identifier for the object, automatically generated as a UUIDv4 value.', primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Stores the date and time when the object was firstly created. This timestamp field is automatically set when the object is created and cannot be modified after creation.', verbose_name='Created Timestamp')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Records the date and time when the object was last updated. This timestamp field is automatically updated whenever the object is modified.', verbose_name='Updated Timestamp')),
                ('name', models.CharField(help_text='A unique name for the object. Must be between 3 and 128 characters long and can include letters, digits, spaces, or special characters such as -, _, and spaces. This field does not serve as a unique identifier within the application but helps users differentiate it from other objects.', max_length=128, unique=True, validators=[alpenwegs.ashared.validators.base_validators.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text="A unique, URL-friendly version of the name, automatically generated from the object's name. This field is used for SEO and as an identifier in URLs.", max_length=128, verbose_name='Slug')),
                ('snippet', models.CharField(blank=True, help_text='A short description of the object, between 8 and 256 characters. It may include letters, numbers, spaces, and the special characters -, _, and .', max_length=256, null=True, validators=[alpenwegs.ashared.validators.base_validators.SnippetValueValidator()], verbose_name='Snippet')),
                ('description', models.TextField(blank=True, help_text='A detailed description of the object. Supports plain text, rich text, or Markdown. Intended for contextual details such as terrain, difficulty level, notable landmarks, scenic highlights, and any other creator-provided insights.', null=True, verbose_name='Detail Description')),
                ('is_public', models.BooleanField(default=True, help_text='Indicates whether the object is publicly accessible (True) or private (False). If set to True, the object will be visible to all users and guests.', verbose_name='Is Public')),
                ('elevation', models.FloatField(help_text='Approximate elevation (in meters above sea level) where the cardâ€™s feature is located.', verbose_name='Elevation (m a.s.l.)')),
                ('type', models.IntegerField(choices=[(1, 'Mountain peak'), (2, 'Mountain range'), (3, 'Mountain hut'), (4, 'Mountain route'), (5, 'Mountain bridge'), (6, 'Mountain pass'), (7, 'Mountain trail'), (8, 'Mountain lake'), (9, 'Mountain cave'), (10, 'Mountain ruins'), (99, 'Special card')], default=1, help_text='Specifies the type of feature this card represents (e.g., mountain peak, hut, lake).', verbose_name='Card Type')),
                ('category', models.IntegerField(choices=[(110, 'Running'), (120, 'Hiking'), (130, 'Climbing'), (140, 'Via Ferrata'), (150, 'Trail Running'), (210, 'Winter Running'), (220, 'Winter Hiking'), (230, 'Snowshoeing'), (240, 'Ski Touring'), (250, 'Cross-Country Skiing'), (301, 'Biking'), (310, 'Mountain Biking'), (320, 'Downhill Biking')], default=120, help_text='The sport or activity associated with this card (e.g., hiking, via ferrata, climbing, biking).', verbose_name='Sport Category')),
                ('category_specific_difficulty', models.IntegerField(choices=[(121, 'T1 - Easy Hiking'), (122, 'T2 - Mountain Hiking'), (123, 'T3 - Demanding Mountain Hiking'), (124, 'T4 - Alpine Hiking'), (125, 'T5 - Demanding Alpine Hiking'), (126, 'T6 - Difficult Alpine Hiking'), (141, 'K1 - Easy'), (142, 'K2 - Moderate'), (143, 'K3 - Difficult'), (144, 'K4 - Very Difficult'), (145, 'K5 - Extreme'), (146, 'K6 - Expert'), (131, 'UIAA III'), (132, 'UIAA IV'), (133, 'UIAA V'), (134, 'UIAA VI'), (135, 'UIAA VII')], default=123, help_text='Difficulty level within the chosen sport category (e.g., T2 for hiking, K3 for via ferrata). Optional field.', verbose_name='Difficulty Level')),
            ],
            options={
                'verbose_name': 'Card',
                'verbose_name_plural': 'Cards',
            },
        ),
        migrations.CreateModel(
            name='PoiModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A unique identifier for the object, automatically generated as a UUIDv4 value.', primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Stores the date and time when the object was firstly created. This timestamp field is automatically set when the object is created and cannot be modified after creation.', verbose_name='Created Timestamp')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Records the date and time when the object was last updated. This timestamp field is automatically updated whenever the object is modified.', verbose_name='Updated Timestamp')),
                ('name', models.CharField(help_text='A unique name for the object. Must be between 3 and 128 characters long and can include letters, digits, spaces, or special characters such as -, _, and spaces. This field does not serve as a unique identifier within the application but helps users differentiate it from other objects.', max_length=128, unique=True, validators=[alpenwegs.ashared.validators.base_validators.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text="A unique, URL-friendly version of the name, automatically generated from the object's name. This field is used for SEO and as an identifier in URLs.", max_length=128, verbose_name='Slug')),
                ('snippet', models.CharField(blank=True, help_text='A short description of the object, between 8 and 256 characters. It may include letters, numbers, spaces, and the special characters -, _, and .', max_length=256, null=True, validators=[alpenwegs.ashared.validators.base_validators.SnippetValueValidator()], verbose_name='Snippet')),
                ('description', models.TextField(blank=True, help_text='A detailed description of the object. Supports plain text, rich text, or Markdown. Intended for contextual details such as terrain, difficulty level, notable landmarks, scenic highlights, and any other creator-provided insights.', null=True, verbose_name='Detail Description')),
                ('is_public', models.BooleanField(default=True, help_text='Indicates whether the object is publicly accessible (True) or private (False). If set to True, the object will be visible to all users and guests.', verbose_name='Is Public')),
                ('transport_description', models.BigIntegerField(blank=True, help_text='Information about how to reach this PoI (roads, trails, public transport).', null=True, verbose_name='Transport Description')),
                ('category', models.IntegerField(choices=[(1, 'City'), (2, 'Village'), (3, 'Mountain Hut'), (4, 'Mountain Peak'), (5, 'Lake'), (6, 'River'), (7, 'Mountain Pass'), (8, 'Forest Area'), (9, 'Glacier'), (10, 'Other')], default=10, help_text='Classification of this Point of Interest (e.g. City, Village, Hut, Peak, Lake, Pass).', verbose_name='Category')),
                ('latitude', models.FloatField(blank=True, help_text='Latitude in decimal degrees (WGS84). Used for map display and spatial queries.', null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, help_text='Longitude in decimal degrees (WGS84). Used for map display and spatial queries.', null=True, verbose_name='Longitude')),
                ('elevation', models.IntegerField(blank=True, help_text='Elevation of the PoI in meters above sea level.', null=True, verbose_name='Elevation (m a.s.l.)')),
            ],
            options={
                'verbose_name': 'Point of Interest',
                'verbose_name_plural': 'Points of Interest',
            },
        ),
        migrations.CreateModel(
            name='RegionModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A unique identifier for the object, automatically generated as a UUIDv4 value.', primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Stores the date and time when the object was firstly created. This timestamp field is automatically set when the object is created and cannot be modified after creation.', verbose_name='Created Timestamp')),
                ('updated', models.DateTimeField(auto_now=True, help_text='Records the date and time when the object was last updated. This timestamp field is automatically updated whenever the object is modified.', verbose_name='Updated Timestamp')),
                ('name', models.CharField(help_text='A unique name for the object. Must be between 3 and 128 characters long and can include letters, digits, spaces, or special characters such as -, _, and spaces. This field does not serve as a unique identifier within the application but helps users differentiate it from other objects.', max_length=128, unique=True, validators=[alpenwegs.ashared.validators.base_validators.NameValueValidator()], verbose_name='Name')),
                ('slug', models.CharField(help_text="A unique, URL-friendly version of the name, automatically generated from the object's name. This field is used for SEO and as an identifier in URLs.", max_length=128, verbose_name='Slug')),
                ('snippet', models.CharField(blank=True, help_text='A short description of the object, between 8 and 256 characters. It may include letters, numbers, spaces, and the special characters -, _, and .', max_length=256, null=True, validators=[alpenwegs.ashared.validators.base_validators.SnippetValueValidator()], verbose_name='Snippet')),
                ('description', models.TextField(blank=True, help_text='A detailed description of the object. Supports plain text, rich text, or Markdown. Intended for contextual details such as terrain, difficulty level, notable landmarks, scenic highlights, and any other creator-provided insights.', null=True, verbose_name='Detail Description')),
                ('is_public', models.BooleanField(default=True, help_text='Indicates whether the object is publicly accessible (True) or private (False). If set to True, the object will be visible to all users and guests.', verbose_name='Is Public')),
                ('country', models.IntegerField(choices=[(41, 'Switzerland'), (49, 'Germany'), (43, 'Austria'), (33, 'France'), (39, 'Italy')], default=41, help_text='Country where the region is located (fixed numeric list).', verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Region',
                'verbose_name_plural': 'Regions',
            },
        ),
    ]
