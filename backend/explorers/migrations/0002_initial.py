# Generated by Django 5.2.5 on 2025-09-07 20:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('assets', '0002_initial'),
        ('compendiums', '0002_initial'),
        ('explorers', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='routemodel',
            name='creator',
            field=models.ForeignKey(help_text='Stores the unique identifier (UUID) of the user who created the object. This field is used to track ownership of the object.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator'),
        ),
        migrations.AddField(
            model_name='routemodel',
            name='users_accomplished',
            field=models.ManyToManyField(help_text='Users who have accomplished or completed this %(class)s. Allows queries of which members completed a %(class)s.', related_name='%(class)s_users_accomplished', to=settings.AUTH_USER_MODEL, verbose_name='Users Accomplished'),
        ),
        migrations.AddField(
            model_name='routemodel',
            name='users_liked',
            field=models.ManyToManyField(help_text='Users who liked this %(class)s. Used to record engagement and allow retrieval of which members expressed a positive reaction.', related_name='%(class)s_users_liked', to=settings.AUTH_USER_MODEL, verbose_name='Users Liked'),
        ),
        migrations.AddField(
            model_name='sectionmodel',
            name='creator',
            field=models.ForeignKey(help_text='Stores the unique identifier (UUID) of the user who created the object. This field is used to track ownership of the object.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator'),
        ),
        migrations.AddField(
            model_name='sectionmodel',
            name='users_liked',
            field=models.ManyToManyField(help_text='Users who liked this %(class)s. Used to record engagement and allow retrieval of which members expressed a positive reaction.', related_name='%(class)s_users_liked', to=settings.AUTH_USER_MODEL, verbose_name='Users Liked'),
        ),
        migrations.AddField(
            model_name='sectiontocardmodel',
            name='card',
            field=models.ForeignKey(help_text='The Card that is associated with the Section to Card M2M relationship.', on_delete=django.db.models.deletion.PROTECT, related_name='section_card_associations', to='compendiums.cardmodel', verbose_name='Card'),
        ),
        migrations.AddField(
            model_name='sectiontocardmodel',
            name='section',
            field=models.ForeignKey(help_text='The Section that is associated with the Card to Section M2M relationship.', on_delete=django.db.models.deletion.PROTECT, related_name='card_section_associations', to='explorers.sectionmodel', verbose_name='Section'),
        ),
        migrations.AddField(
            model_name='sectionmodel',
            name='sections',
            field=models.ManyToManyField(help_text='Cards associated with the section that can be obtained by the user by completing this section.', related_name='section_sections', through='explorers.SectionToCardModel', to='compendiums.cardmodel', verbose_name='Section Cards'),
        ),
        migrations.AddField(
            model_name='sectiontophotomodel',
            name='photo',
            field=models.ForeignKey(help_text='The Photo that is associated with the Section to Photo M2M relationship.', on_delete=django.db.models.deletion.PROTECT, related_name='section_photo_associations', to='assets.photomodel', verbose_name='Photo'),
        ),
        migrations.AddField(
            model_name='sectiontophotomodel',
            name='section',
            field=models.ForeignKey(help_text='The Section that is associated with the Photo to Section M2M relationship.', on_delete=django.db.models.deletion.PROTECT, related_name='photo_section_associations', to='explorers.sectionmodel', verbose_name='Section'),
        ),
        migrations.AddField(
            model_name='sectionmodel',
            name='photos',
            field=models.ManyToManyField(help_text='A collection of photos that are linked to the section and that provide a visual documentation of the section created by the section creator.', related_name='section_photos', through='explorers.SectionToPhotoModel', to='assets.photomodel', verbose_name='Section Photos'),
        ),
        migrations.AddField(
            model_name='sectiontopoimodel',
            name='poi',
            field=models.ForeignKey(help_text='The Point of Interest that is associated with the Section to Point of Interest M2M relationship.', on_delete=django.db.models.deletion.PROTECT, related_name='section_poi_associations', to='compendiums.poimodel', verbose_name='Point of Interest'),
        ),
        migrations.AddField(
            model_name='sectiontopoimodel',
            name='section',
            field=models.ForeignKey(help_text='The Section that is associated with the Point of Interest to Section M2M relationship.', on_delete=django.db.models.deletion.PROTECT, related_name='poi_section_associations', to='explorers.sectionmodel', verbose_name='Section'),
        ),
        migrations.AddField(
            model_name='sectionmodel',
            name='pois',
            field=models.ManyToManyField(help_text='A list of Points of Interest associated with the section, highlighting key places for travelers to visit along the way. Points of Interest also mark the start and end points of the section.', related_name='section_pois', through='explorers.SectionToPoiModel', to='compendiums.poimodel', verbose_name='Section Points of Interest (PoIs)'),
        ),
        migrations.AddField(
            model_name='sectiontoregionmodel',
            name='region',
            field=models.ForeignKey(help_text='The Region that is associated with the Section to Region M2M relationship.', on_delete=django.db.models.deletion.PROTECT, related_name='section_region_associations', to='compendiums.regionmodel', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='sectiontoregionmodel',
            name='section',
            field=models.ForeignKey(help_text='The Section that is associated with the Region to Section M2M relationship.', on_delete=django.db.models.deletion.PROTECT, related_name='region_section_associations', to='explorers.sectionmodel', verbose_name='Section'),
        ),
        migrations.AddField(
            model_name='sectionmodel',
            name='regions',
            field=models.ManyToManyField(help_text='Geographical regions that this section crosses or belongs to. Useful for filtering and categorization.', related_name='section_regions', through='explorers.SectionToRegionModel', to='compendiums.regionmodel', verbose_name='Section Regions'),
        ),
        migrations.AddField(
            model_name='tripmodel',
            name='creator',
            field=models.ForeignKey(help_text='Stores the unique identifier (UUID) of the user who created the object. This field is used to track ownership of the object.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creator'),
        ),
        migrations.AddField(
            model_name='tripmodel',
            name='users_accomplished',
            field=models.ManyToManyField(help_text='Users who have accomplished or completed this %(class)s. Allows queries of which members completed a %(class)s.', related_name='%(class)s_users_accomplished', to=settings.AUTH_USER_MODEL, verbose_name='Users Accomplished'),
        ),
        migrations.AddField(
            model_name='tripmodel',
            name='users_liked',
            field=models.ManyToManyField(help_text='Users who liked this %(class)s. Used to record engagement and allow retrieval of which members expressed a positive reaction.', related_name='%(class)s_users_liked', to=settings.AUTH_USER_MODEL, verbose_name='Users Liked'),
        ),
        migrations.AddField(
            model_name='triptoroutemodel',
            name='poi',
            field=models.ForeignKey(blank=True, help_text='The point of interest associated with Route to Trip M2M relationship.', null=True, on_delete=django.db.models.deletion.CASCADE, to='compendiums.poimodel', verbose_name='Point of Interest'),
        ),
        migrations.AddField(
            model_name='triptoroutemodel',
            name='route',
            field=models.ForeignKey(help_text='The Route that is associated with the Trip to Route M2M relationship.', on_delete=django.db.models.deletion.CASCADE, related_name='trip_route_associations', to='explorers.routemodel', verbose_name='Route'),
        ),
        migrations.AddField(
            model_name='triptoroutemodel',
            name='trip',
            field=models.ForeignKey(help_text='The Trip that is associated with the Route to Trip M2M relationship.', on_delete=django.db.models.deletion.CASCADE, related_name='route_trip_associations', to='explorers.tripmodel', verbose_name='Trip'),
        ),
        migrations.AddField(
            model_name='tripmodel',
            name='routes',
            field=models.ManyToManyField(help_text='Associated Routes.', related_name='trip_routes', through='explorers.TripToRouteModel', to='explorers.routemodel', verbose_name='Routes'),
        ),
        migrations.AddField(
            model_name='routemodel',
            name='trips',
            field=models.ManyToManyField(help_text='Trips that include this route as part of a multi-day experience.', related_name='route_trips', through='explorers.TripToRouteModel', to='explorers.tripmodel', verbose_name='Route Trips'),
        ),
    ]
